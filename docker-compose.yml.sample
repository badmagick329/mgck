services:
  db:
    image: postgres:15
    container_name: mgck_db
    volumes:
      - ./db:/var/lib/postgresql/data/
    restart: "always"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  core_db:
    image: postgres:15
    container_name: core_db
    volumes:
      - ./core_db:/var/lib/postgresql/data/
    restart: "always"
    environment:
      POSTGRES_USER: "${CORE_DB_USER}"
      POSTGRES_PASSWORD: "${CORE_DB_PASSWORD}"
      POSTGRES_DB: "${CORE_DB_NAME}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CORE_DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:6-alpine

  djangobackend:
    container_name: mgck_backend
    image: mgckdjangobackend:prod
    restart: "always"
    command: sh -c "python3 manage.py migrate &&
      python3 manage.py collectstatic --no-input &&
      printenv > /etc/environment &&
      cron &&
      gunicorn djangobackend.wsgi:application --bind 0.0.0.0:8002"
    volumes:
      - staticfiles:/usr/src/app/staticfiles
      - ${REDDIT_VIDEOS}:${REDDIT_VIDEOS_STATIC}
      - ${UPLOADS}:${UPLOADS_STATIC}
    expose:
      - 8002
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
  nextapp:
    container_name: mgck_next
    image: mgckfrontend:prod
    restart: "always"
    depends_on:
      - djangobackend
    volumes:
      - ./public:/app/public

  coreapi:
    container_name: mgck_coreapi
    image: mgckcoreapi:prod
    restart: "always"
    expose:
      - 5010
    env_file:
      - ./.env
    depends_on:
      core_db:
        condition: service_healthy

  nginx:
    image: mgcknginx:prod
    restart: "always"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - staticfiles:/usr/src/app/staticfiles:ro
      - ./irene:/usr/src/app/irene:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ${REDDIT_VIDEOS}:${REDDIT_VIDEOS_STATIC}:ro
      - ${UPLOADS}:${UPLOADS_STATIC}:ro
      - ${GFYS}:${GFYS_STATIC}:ro
      - ./nginx/logs/:/var/logs:rw
    ports:
      - ${NGINX_PORT}:80
      - 443:443
    env_file:
      - ./.env
    depends_on:
      - djangobackend
      - nextapp
      - coreapi

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - nginx
    env_file:
      - ./.env

volumes:
  staticfiles:
